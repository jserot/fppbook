# UART - RX Part (2eme version)

fsm model RX<d:int> (
   # d donne la durée d'un bit (en périodes de H)
     in h: event,
     in rx: bit,
    out rxData: int<8>,
    out rxRdy: bool,
    out rxErr: bool)
  {
  states: Repos, Sync, Reception;
  vars:
    i: int<0:10>,
    k: int<0:d-1>,
    r: int<10>;
  trans:
    Repos -- h.rx=0 | r:=0; k:=0; rxRdy:=0 -> Sync,
    Sync -- h.k<d/2-1 | k:=k+1 -> Sync,
    Sync -- h.k=d/2-1 | k:=0; i:=0 -> Reception,
    Reception -- h.k<d-1 | k:=k+1 -> Reception,
    Reception -- h.(k=d-1).(i<10) | r[8:0]:=r[9:1]; r[9]:=rx; k:=0; i:=i+1 -> Reception,
    Reception -- h.(k=d-1).(i=10) | rxData:=r[7:0]; rxErr:=r[8]!=parite(r[7:0]); rxRdy:=1 -> Repos;
  itrans: | rxRdy:=1 -> Repos;
  }

